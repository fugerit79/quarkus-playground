version: '3'
services:

  database:
    image: postgres:16
    container_name: database
    ports:
      - 5432:5432
    environment:
      ALLOW_IP_RANGE: "0.0.0.0/0"
      POSTGRES_DB: database
      POSTGRES_USER: database
      POSTGRES_PASSWORD: password

  zookeeper:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    container_name: zookeeper
    ports:
      - 2181:2181
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    environment:
      LOG_DIR: /tmp/logs
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  jaeger:
    image: jaegertracing/all-in-one:1.14
    container_name: jaeger
    depends_on:
      - otel-collector
    ports:
      - 5778:5778
      - 9411:9411
      - 14250:14250
      - 14268:14268
      - 16686:16686
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - 13133:13133
      - 4317:4317
      - 55680:55680

  number-api:
    image: docker-registry:5000/radcortez/number-api
    container_name: number-api
    depends_on:
      - otel-collector
    ports:
      - 8081:8081
    environment:
      QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317

  book-api:
    image: docker-registry:5000/radcortez/book-api
    container_name: book-api
    depends_on:
      - database
      - zookeeper
      - kafka
      - otel-collector
      - number-api
    ports:
      - 8080:8080
    environment:
      NUMBER_API_MP_REST_URL: http://number-api:8081/
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://database:5432/database
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
